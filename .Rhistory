a<-seq(5,15,length=1000)
a
plot(a,x,type="l",lwd=1)
length(x)
a<-seq(5,15,length=10000)
plot(a,x,type="l",lwd=1)
x<-dnorm(a,mean=5,sd=2)
a<-seq(2,7,length=10000)
a<-seq(0,9,length=10000)
x<-dnorm(a,mean=5,sd=2)
plot(a,x,type='l')
a<-seq(0,10,length=10000)
x<-dnorm(a,mean=5,sd=2)
plot(a,x,type='l')
abline(v=5)
abline(v=5,lwd=3,colour="Red")
abline(v=5,lwd=3,color="Red")
abline(v=5,lwd=3,col="Red")
abline(v=5,lwd=3,col="Blue")
abline(v=5,lwd=3,col="Blue")
x<-seq(0,10,length=10000)
y<-dnorm(x,mean=5,sd=0.8)
z<-[x,y]
ggp<-ggplot(z,aes(x=z$x))
ggp<-ggp+geom_histogram(aes(y=z$y))
x<-seq(0,10,length=10000)
y<-dnorm(x,mean=5,sd=0.8)
z<-as.dafa.frame(c(x,y))
x<-seq(0,10,length=10000)
y<-dnorm(x,mean=5,sd=0.8)
z<-as.data.frame(c(x,y))
View(z)
x<-seq(0,10,length=10000)
y<-dnorm(x,mean=5,sd=0.8)
z<-as.data.frame([x,y])
x<-seq(0,10,length=10000)
y<-dnorm(x,mean=5,sd=0.8)
z<-as.data.frame({x,y})
a=(1,2)
a=c(1,2)
b(x(1,2;3,4))
b=c(1,2;3,4))
b=c(1,2,3,4))
b=c(1,2;3,4)
b=c(1,2,3,4)
c=[a,b]
x<-seq(0,10,length=10000)
y<-dnorm(x,mean=5,sd=0.8)
z<-data.frame(x,y)
ggp<-ggplot(z,aes(x=z$x))
ggp<-ggp+geom_histogram(aes(y=z$y))
ggp
ggp<-ggplot(z,aes(x=z$x))
ggp
ggp<-ggp+geom_histogram(binwidth=0.3,aes(y=z$y))
ggp
ggp<-ggp+geom_histogram(binwidth=0.3,aes(y=..z$y..))
ggp
x<-seq(0,10,length=10000)
y<-dnorm(x,mean=5,sd=0.8)
z<-data.frame(x,y)
ggp<-ggplot(z,aes(x=z$x))
ggp<-ggp+geom_histogram(aes(y=..z$y..))
ggp
x<-seq(0,10,length=10000)
y<-dnorm(x,mean=5,sd=0.8)
z<-data.frame(x,y)
ggp<-ggplot(x,aes(x))
ggp<-ggp+geom_histogram(aes(y))
x<-seq(0,10,length=10000)
y<-dnorm(x,mean=5,sd=0.8)
z<-data.frame(x,y)
ggp<-ggplot(x,aes(x))
ggp<-ggp+geom_histogram(aes(z$y))
x<-seq(0,10,length=10000)
y<-dnorm(x,mean=5,sd=0.8)
z<-data.frame(x,y)
ggp<-ggplot(x,aes(x))
ggp<-ggp+geom_histogram(aes(y=..density..))+geom_density()
x<-seq(0,10,length=10000)
y<-dnorm(x,mean=5,sd=0.8)
z<-data.frame(x,y)
ggp<-ggplot(z,aes(z$y))
ggp<-ggp+geom_histogram(aes(y=..density..))+geom_density()
ggp
x<-seq(0,10,length=10000)
y<-dnorm(x,mean=5,sd=0.8)
z<-data.frame(x,y)
ggp<-ggplot(z,aes(x))
ggp<-ggp+geom_histogram(aes(y=..density..))+geom_density()
ggp
x<-seq(0,10,length=10000)
y<-dnorm(x,mean=5,sd=0.8)
z<-data.frame(x,y)
ggp<-ggplot(z,aes(x))
ggp<-ggp+geom_histogram(aes(y=..density..),binwidth=50)+geom_density()
ggp
ggp<-ggplot(mns,aes(mns))
ggp<-ggp+geom_histogram(aes(y=..density..),binwidth=50)+geom_density()
ggp<-ggp+geom_histogram(aes(y=..density..),binwidth=50)+geom_density()
ggp
ggp<-ggplot(mns,aes(mns))
ggp<-ggp+geom_histogram(aes(y=..density..))+geom_density()
ggp<-ggp+geom_histogram(aes(y=mns),binwidth=50)+geom_density()
x<-seq(0,10,length=10000)
z<-data.frame(x,mns)
ggp<-ggplot(z,aes(x))
ggp<-ggp+geom_histogram(aes(y=mns),binwidth=50)+geom_density()
ggp
ggp<-ggp+geom_histogram(aes(..density..),binwidth=50)+geom_density()
ggp
x<-seq(0,10,length=10000)
z<-data.frame(x,mns)
ggp<-ggplot(z$mns,aes(z$mns))
ggp<-ggp+geom_histogram(aes(..density..))+geom_density()
z
mns
x
z
head(x)
head(z)
z
ggp<-ggplot(z,aes(mns))
ggp<-ggp+geom_histogram(aes(..density..))+geom_density()
ggp
ggp<-ggplot(z,aes(x = mns))
ggp<-ggp+geom_histogram(aes(..density..))+geom_density()
ggp
ggp<-ggplot(z,aes(x = mns))
ggp<-ggp+geom_histogram()
x<-seq(0,10,length=10000)
z<-data.frame(x,mns)
ggp<-ggplot(z,aes(x = mns))
ggp<-ggp+geom_histogram()
x<-seq(0,10,length=1000)
z<-data.frame(x,mns)
ggp<-ggplot(z,aes(x = mns))
ggp<-ggp+geom_histogram()+geom_density()
ggp
x<-seq(0,10,length=1000)
z<-data.frame(x,mns)
ggp<-ggplot(z,aes(x = mns))
ggp<-ggp+geom_histogram()
ggp<-ggp+stat_function(fun=dnorm,colour = "red", arg = list(mean = 5, sd = 0.8))
x<-seq(0,10,length=1000)
z<-data.frame(x,mns)
ggp<-ggplot(z,aes(x = mns))
ggp<-ggp+geom_histogram(aes(y=..density..))
ggp<-ggp+stat_function(fun = dnorm, colour = "red", arg = list(mean = 5, sd = 0.8))
ggp
x<-seq(0,10,length=1000)
z<-data.frame(x,mns)
ggp<-ggplot(z,aes(x = mns))+
geom_histogram(aes(y=..density..))+
stat_function(fun = dnorm, colour = "red", arg = list(mean = 5, sd = 0.8))
ggp
x<-seq(0,10,length=1000)
z<-data.frame(x,mns)
ggp<-ggplot(z,aes(x = mns))+
geom_histogram(aes(y=..density..))+
stat_function(fun = dnorm, colour = "red",
arg = (list(mean = 5, sd = 0.8)))
x<-seq(0,10,length=1000)
z<-data.frame(x,mns)
ggp<-ggplot(z,aes(x = mns))+
geom_histogram(aes(y=..density..))+
stat_function(fun = dnorm, colour = "red",
arg = list(mean = 5, sd = 0.8))
x<-seq(0,10,length=1000)
z<-data.frame(x,mns)
ggp<-ggplot(z,aes(x = mns))+
geom_histogram(aes(y=..density..))+
stat_function(fun = dnorm, args = list(mean = 5, sd = 0.8))
ggp
ggp<-ggplot(z,aes(x = mns))+
geom_histogram(aes(y=..density..),colour="blue")+
stat_function(fun = dnorm, args = list(mean = 5, sd = 0.8))
ggp
x<-seq(0,10,length=1000)
z<-data.frame(x,mns)
ggp<-ggplot(z,aes(x = mns))+
geom_histogram(aes(y=..density..),fill="blue")+
stat_function(fun = dnorm, args = list(mean = 5, sd = 0.8))
ggp
x<-seq(0,10,length=1000)
z<-data.frame(x,mns)
ggp<-ggplot(z,aes(x = mns))+
geom_histogram(aes(y=..density..),fill="blue",alpha=0.5)+
stat_function(fun = dnorm, args = list(mean = 5, sd = 0.8))
ggp
library(datasets)
ToothGrowth
qplot(ToothGrowth,aes(len,sep))
qplot(ToothGrowth,aes(len))
qplot(ToothGrowth$dose,ToothGrowth$len)
qplot(ToothGrowth$dose,ToothGrowth$len,facets = ToothGrowth$supp)
qplot(ToothGrowth$dose,ToothGrowth$len,facets = ToothGrowth$supp~*)
qplot(ToothGrowth$dose,ToothGrowth$len,facets = ToothGrowth$supp~)
qplot(ToothGrowth$dose,ToothGrowth$len,facets = *~ ToothGrowth$supp)
qplot(ToothGrowth$dose,ToothGrowth$len,facets = ~ ToothGrowth$supp)
qplot(ToothGrowth$dose,ToothGrowth$len,facets = ~ ToothGrowth$supp)
qplot(ToothGrowth$dose,ToothGrowth$len,facets = ~ supp)
with(ToothGrowth,qplot(dose,len,facets = ~ supp))
summary(ToothGrowth)
with(ToothGrowth,qplot(supp,len,facets = ~ dose))
with(ToothGrowth,qplot(supp,len)
ggplot(ToothGrowth,aes(x = supp, y = len))
+geom_boxplot()
ggplot(ToothGrowth,aes(x = supp, y = len))
+geom_boxplot()
ggplot(ToothGrowth,aes(x = supp, y = len)) +geom_boxplot()
ggplot(ToothGrowth,aes(x = supp, y = len)) +geom_boxplot(fill="blue",alpha=0.5)
ggplot(ToothGrowth,aes(x = supp, y = len)) +geom_boxplot(fill="blue",alpha=0.3)
ggplot(ToothGrowth,aes(x = dose, y = len)) +geom_boxplot(fill="blue",alpha=0.3)
ggplot(ToothGrowth,aes(x = supp, y = len)) +geom_boxplot()+theme_bw()
ggplot(ToothGrowth,aes(x = supp, y = len)) +theme_bw()+geom_boxplot(fill="blue",alpha=0.2)
ggplot(ToothGrowth,aes(x = supp, y = len)) +theme_economist()+geom_boxplot(fill="blue",alpha=0.2)
ggplot(ToothGrowth,aes(x = supp, y = len)) +theme_bw()+geom_boxplot(fill="blue",alpha=0.2) + facet_grid(.~dose)
ggplot(ToothGrowth,aes(x = does, y = len)) +theme_bw()+geom_boxplot(fill="blue",alpha=0.2) + facet_grid(.~supp)
ggplot(ToothGrowth,aes(x = supp, y = len)) +theme_bw()+geom_boxplot(fill="blue",alpha=0.2) + facet_grid(.~dose)
ggplot(ToothGrowth,aes(x = supp, y = len)) +theme_bw()+geom_boxplot(fill="blue",alpha=0.2) + facet_grid(.~dose)
summary(ToothGrowth)
ToothGrowth$dose<-as.factor(ToothGrowth$dose)
ggplot(ToothGrowth,aes(x = dose, y = len)) +theme_bw()+geom_boxplot(fill="blue",alpha=0.2) + facet_grid(.~supp)
ggplot(ToothGrowth,aes(x = dose, y = len)) +geom_boxplot(fill="blue",alpha=0.3)+xlab("Dosage")+ylab(Tooth Length)
ggplot(ToothGrowth,aes(x = dose, y = len)) +geom_boxplot(fill="blue",alpha=0.3)+xlab("Dosage")+ylab("Tooth Length")
ggplot(ToothGrowth,aes(x = dose, y = len)) +geom_boxplot(fill="blue",alpha=0.3)+ylab("Tooth Length")
ggplot(ToothGrowth,aes(x = dose, y = len)) +geom_boxplot(fill="blue",alpha=0.3)
summary(ToothGrowth)
ToothGrowth$dose<-as.factor(ToothGrowth$dose)
ggplot(ToothGrowth,aes(x = dose, y = len)) +theme_bw()+geom_boxplot(fill="blue",alpha=0.2) + facet_grid(.~supp)
summary(ToothGrowth)
ToothGrowth$dose<-as.factor(ToothGrowth$dose)
ggplot(ToothGrowth,aes(x = dose, y = len)) +theme_bw()+geom_boxplot(fill="blue",alpha=0.2) + facet_grid(.~supp)+xlab("dosage")+ylab("Tooth Length")
summary(ToothGrowth)
ToothGrowth$dose<-as.factor(ToothGrowth$dose)
ggplot(ToothGrowth,aes(x = dose, y = len)) +theme_bw()+geom_boxplot(fill="blue",alpha=0.2) + facet_grid(.~supp)+labs(x = "Dosage", y = "Tooth Length",title="Plot of Tooth Length by Dose and Supplement")
)
summary(ToothGrowth)
ToothGrowth$dose<-as.factor(ToothGrowth$dose)
ggplot(ToothGrowth,aes(x = dose, y = len)) +theme_bw()+geom_boxplot(fill="blue",alpha=0.2) + facet_grid(.~supp)+labs(x = "Dosage", y = "Tooth Length",title="Plot of Tooth Length by Dose and Supplement")
summary(ToothGrowth)
View(ToothGrowth)
View(ToothGrowth)
sapply(ToothGrowth,supp,mean)
sapply(ToothGrowth,mean)
?
sapply
?tapply
tapply(ToothGrowth$len,ToothGrowth$supp,mean)
tapply(ToothGrowth$len,c(ToothGrowth$supp,ToothGrowth$dose,mean)
tapply(ToothGrowth$len,c(ToothGrowth$supp,ToothGrowth$dose)mean)
tapply(ToothGrowth$len,list(ToothGrowth$supp,ToothGrowth$dose),mean)
tapply(ToothGrowth$len,ToothGrowth$supp,mean)
tapply(ToothGrowth$len,ToothGrowth$supp,sd)
ToothGrowth[supp=="VC"]
ToothGrowth{supp=="VC"}
ToothGrowth$supp
ToothGrowth[ToothGrowth$supp=="VC"]
ToothGrowth[ToothGrowth$supp=="VC",]
ToothGrowth$len[ToothGrowth$supp=="VC",]
ToothGrowth$len[ToothGrowth$supp=="VC"]
VDdat<-ToothGrowth$len[ToothGrowth$supp=="VC"]
rm(VD)
rm(VDdat)
VCdat<-ToothGrowth$len[ToothGrowth$supp=="VC"]
OJdat<-ToothGrowth$len[ToothGrowth$supp=="OJ"]
md<-mean(OJdat)-mean(VCdat)
md
require("caret")
require(mtcars)
require("caret")
require("mtcars")
require("kenlab")
require("kernlab")
data(spam)
summary(spam)
str(spam)
ggpairs(spam)
require(GGally)
ggpairs(spam)
head(spam)
?prccomp
require(caret)
?prcomp()
prComp(spam[,-58])
prcomp(spam[,-58])
pr1<-prcomp(spam[,-58])[,1]
head(prcomp(spam[,-58]))
dim(prcomp(spam[,-58]))
size(prcomp(spam[,-58]))
class(prcomp(spam[,-58])[,1])
class(prcomp(spam[,-58])
)
prcomp(spam[,-58])$rotation
prcomp(spam[,-58])$rotation[,1]
library(caret)
data("faithful")
inTrain<-createDataPartition(y = faithful$waiting,p=0.5,list=FALSE)
trainFaith<-faithful[inTrain,]
testFaith<-faithful[-inTrain,]
head(trainFaith)
set.seed(333)
inTrain<-createDataPartition(y = faithful$waiting,p=0.5,list=FALSE)
trainFaith<-faithful[inTrain,]
testFaith<-faithful[-inTrain,]
head(trainFaith)
qplot(trainFaith$waiting,trainFaith$eruptions,col = "blue")
qplot(trainFaith$waiting,trainFaith$eruptions)
qplot(trainFaith$waiting,trainFaith$eruptions,xlab="Waiting",ylab = "Duration",pch = 19)
qplot(trainFaith$waiting,trainFaith$eruptions,xlab="Waiting",ylab = "Duration")
qplot(trainFaith$waiting,trainFaith$eruptions,xlab="Waiting",ylab = "Duration",theme_bw())
lm1<-lm(eruptions ~ waiting,data=trainFaith)
summary(lm1)
g1<-ggplot(trainFaith$waiting,trainFaith$eruptions,xlab = "Waiting",ylab = "Duration")
g1<-ggplot(dat = trainFaith,xlab = "Waiting",ylab = "Duration")
g1+aes(trainFaith$waiting,trainFaith$eruptions)
g1
g1<-qplot(trainFaith$waiting,trainFaith$eruptions,xlab = "Waiting",ylab = "Duration",method="lm")
g1<-qplot(trainFaith$waiting,trainFaith$eruptions,xlab = "Waiting",ylab = "Duration",geom=c("line","point"))
g1
g1<-qplot(trainFaith$waiting,trainFaith$eruptions,xlab = "Waiting",ylab = "Duration",geom=c("smooth","point"))
g1
g1<-qplot(trainFaith$waiting,trainFaith$eruptions,xlab = "Waiting",ylab = "Duration",geom=c("lm","point"))
g1<-ggplot(data = trainFaith,aes(trainFaith$waiting,trainFaith$eruptions,xlab = "Waiting",ylab = "Duration")
)
g1+geom_point()
g1+geom_line()
g1
g1
g1<-g1+geompoint()
g1<-g1+geom_point()
g1
g1<-g1+geom_line(trainFaith$waiting,lm1$fitted)
?geom_line
g1<-g1+geom_smooth(method="lm",formula = x ~ lm1$fitted.values)
g1
g
g1
g1<-ggplot(data = trainFaith,aes(trainFaith$waiting,trainFaith$eruptions,xlab = "Waiting",ylab = "Duration")
)
g1
g1+geom_point()
g1+geom_point()+geom_smooth(method="lm",formula = lm1$fitted.values~x)
g1+geom_point()+geom_smooth(method="lm",formula = y~x)
g1+geom_point()+geom_line(method="lm",formula = y~x)
g1+geom_point()+geom_smooth(method="lm",formula = lm1$fitted.values~x)
coef(lm1)[1]+coef(lm1)[2]*80
newdata<-data.frame(waiting=80)
predicty(lm1,newdata)
predict(lm1,newdata)
g1<-ggplot(data = testFaith,aes(testFaith$waiting,testFaith$eruptions,xlab = "Waiting",ylab = "Duration")
)
g1+geom_point()+geom_smooth(method="lm",formula = y~x)
g1+geom_point()+geom_smooth(method="lm",formula = predict(lm1,newdata=testFaith))
g1+geom_point()+geom_smooth(method="lm",formula = predict(lm1,newdata=testFaith)~x)
install.packages("AppliedPredictiveModeling")
install.packages("Hmisc")
library(AppliedPredictiveModeling)
data(concrete)
library(caret)
set.seed(1000)
inTrain = createDataPartition(mixtures$CompressiveStrength, p =0.75)[[1]]
trainin<-mixtures[inTrain,]
training<-mixtures[inTrain,]
testing<-mixtures[inTrain,]
qplot(mixtures$Cement,mixtures$CompressiveStrength)
qplot(seq_along(mixtures$CompressiveStrength),mixtures$CompressiveStrength,color = mixtures$Cement)
qplot(seq_along(mixtures$CompressiveStrength),mixtures$CompressiveStrength,color = mixtures$FlyAsh)
qplot(seq_along(mixtures$CompressiveStrength),mixtures$CompressiveStrength,color = mixtures$Age)
qplot(mixtures$Superplasticizer)
summary(mixtures$Superplasticizer)
summary(log(mixtures$Superplasticizer)
)
summary(log(mixtures$Superplasticizer+1)
)
qplot(log(mixtures$Superplasticizer+1)
)
qplot(mixtures$Superplasticizer)
set.seed(3433)
data(AlzheimerDisease)
adData<-data.frame(diagnosis,predictors)
diagnosis
summary(predictors)
inTrain<-createDataPartition(diagnosis,p=0.75)[[1]]
training=adData[inTrain,]
testing<-adDatta[-inTrain,]
testing<-adData[-inTrain,]
?subset
colnames(adData)
colnames(adData)=="IL*"
grep("^IL",colnames(adData))
adData[grep("^IL",colnames(adData))]
testSub<-adData[grep("^IL",colnames(adData))]
preProcess
?preProcess
preProcess(testSub,thresh = 0.9)
preProcess(testSub,thresh = list(0.9))
pca1<-preProcess(testSub,thresh = list(0.9))
pca1$rotation
pca1<-preProcess(testSub,pcaComp = 11)
pca1
pca1<-preProcess(testSub,pcaComp = 7)
pca1
prcomp(testSub)
prcomp(testSub)$rotation
prcomp(testSub)$rotation
prc1<-prcomp(testSub)
qplot(prc1[,1],prc2[,2])
qplot(prc1$x[,1],prc2$x[,2])
qplot(prc1$x[,1],prc1$x[,2])
qplot(prc1$x[,1],prc1$x[,3])
qplot(prc1$x[,1],prc1$x[,4])
qplot(prc1$x[,1],prc1$x[,5])
preProcess(testSub,thresh = list(0.9),method="pca")
preProcess(testSub,pcaComp = 8,method="pca")
pre1<-preProcess(testSub,pcaComp = 8,method="pca")
pre1$rotation
summary(pre1)
pre1$thresh
pre1<-preProcess(testSub,pcaComp = 7,method="pca")
pre1$thresh
pre1<-preProcess(testSub,pcaComp =22,method="pca")
pre1<-preProcess(testSub,pcaComp =11,method="pca")
pre1
pre1<-preProcess(testSub,thresh=0.9,method="pca")
pre1
testSub<-c(adData[grep("^IL",colnames(adData))],diagnosis)
pca1<-preProcess(testSub,thresh=0.8,method="pca")
testSub<-as.data.frame(testSub)
pca1<-preProcess(testSub,thresh=0.8,method="pca")
pca1<-preProcess(testSub,thresh=0.8,method="pca")
diagnosis
testSub<-c(adData[grep("^IL",colnames(adData))],diagnosis)
testSub
summary(testSub)
testSub<-adData[grep("^IL",colnames(adData))]
testSub$diagnosis<-diagnosis
head(testSub)
train(diagnosis~.,data=testSub,method="glm")
train(testSub$diagnosis~.,data=testSub,method="glm")
testSub<-adData[grep("^IL",colnames(adData))]
train(diagnosis~.,data=testSub,method="glm")
install.packages("caret",dependencies = T)
install.packages("caret", dependencies = T)
train(diagnosis~.,data=testSub,method="glm")
Fdata<-read.csv("pml-training.csv",stringsAsFactors = F, na.strings = c("","N/A"))
setwd("C:/Rdata/RforML")
Fdata<-read.csv("pml-training.csv",stringsAsFactors = F, na.strings = c("","N/A"))
View(Fdata)
View(Fdata)
library(dplyr)
library(caret)
which(is.na(Fdata),arr.ind = TRUE)
test<-which(is.na(Fdata),arr.ind = TRUE)
class(test)
dim(test_)
dim(test)
test[,2]
test<-sapply(Fdata,function(x) which(is.na(),arr.ind = TRUE)
)
test<-sapply(Fdata,function(x) which(is.na(x),arr.ind = TRUE)
)
test
test<-sapply(Fdata,function(x) which(is.na(x),arr.ind = TRUE))
test
dim(test)
length(test)
test
test<-sapply(Fdata,function(x) any(which(is.na(x),arr.ind = TRUE)))
test
colnames(Fdata)[test]
Fdata<-Fdata[,!names(Fdata) %in% naCols]
incNA<-sapply(Fdata,function(x) any(which(is.na(x),arr.ind = TRUE)))
naCols<-colnames(Fdata)[incNA]
Fdata<-Fdata[,!names(Fdata) %in% naCols]
impData<-Fdata[Fdata$new_window=="yes",naCols]
impData<-Fdata[Fdata$new_window=="yes",naCols]
naCols
class(naCols)
class(c("a","b","c"))
impData<-Fdata[Fdata$new_window=="yes"]
impData<-Fdata[Fdata$new_window=="yes",]
impData<-Fdata[Fdata$new_window=="yes",names(naCols)]
names(naCols)
rownames(naCols)
naCols
impData<-Fdata[Fdata$new_window=="yes",as.data.frame(naCols)]
impData<-Fdata[Fdata$new_window=="yes",naCols]
impData<-Fdata[Fdata$new_window=="yes",names(Fdata) %in% naCols]
names(Fdata) %in% naCols
incNA<-sapply(Fdata,function(x) any(which(is.na(x),arr.ind = TRUE)))
naCols<-colnames(Fdata)[incNA]
Fdata<-Fdata[,!names(Fdata) %in% naCols]
impData<-Fdata[Fdata$new_window=="yes",names(Fdata) %in% naCols]
imputedFValues<-Fdata[Fdata$new_window,names(Fdata) %in% naCols]
TrainPredictors<-Fdata[,!names(Fdata) %in% naCols]
imputedFValues<-Fdata[Fdata$new_window=="yes",names(Fdata) %in% naCols]
Fdata<-read.csv("pml-training.csv",stringsAsFactors = F, na.strings = c("","N/A"))
### 75% training 25% test
inTrain<-createDataPartition(Fdata$classe,p=0.75)[[1]]
TrainPredictors<-Fdata[inTrain,-160]
TrainOutcome<-Fdata[inTrain,160]
TestPredictors<-Fdata[-inTrain,-160]
TestOutcome<-Fdata[-inTrain,160]
incNA<-sapply(Fdata,function(x) any(which(is.na(x),arr.ind = TRUE)))
naCols<-colnames(Fdata)[incNA]
TrainPredictors<-Fdata[,!names(Fdata) %in% naCols]
compValues<-Fdata[,!names(Fdata) %in% naCols]
?merge
merge(Fdata,TrainPredictors,data=TrainPewctors,x = )
imputedFValues<-Fdata[Fdata$new_window=="yes",names(Fdata) %in% naCols]
